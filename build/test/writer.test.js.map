{"version":3,"sources":["../../src/test/writer.test.js"],"names":["describe","it","example","writer","parts","_splitXML","equal","length","type","res","_emitText","text","dText"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,QAAT,EAAmB,MAAM;AACvBA,WAAS,YAAT,EAAuB,MAAM;AAC3BC,OAAG,YAAH,EAAiB,MAAM;AACrB,YAAMC,UAAW;yCAAjB;AAEA,YAAMC,SAAS,oBAAf;AACA,YAAMC,QAAQD,OAAOE,SAAP,CAAiBH,OAAjB,CAAd;;AAEA,uBAAOI,KAAP,CAAa,CAAb,EAAgBF,MAAMG,MAAtB;AACA,uBAAOD,KAAP,aAAiBF,MAAM,CAAN,EAASI,IAA1B;AACA,uBAAOF,KAAP,cAAkBF,MAAM,CAAN,EAASI,IAA3B;AACD,KATD;;AAWAP,OAAG,mBAAH,EAAwB,MAAM;AAC5B,YAAMC,UAAW;;;;;;;;;;mCAAjB;AAWA,YAAMC,SAAS,oBAAf;AACA,YAAMC,QAAQD,OAAOE,SAAP,CAAiBH,OAAjB,CAAd;;AAEA,uBAAOI,KAAP,CAAa,CAAb,EAAgBF,MAAMG,MAAtB;AACD,KAhBD;AAiBD,GA7BD;;AA+BAP,WAAS,YAAT,EAAuB,MAAM;AAC3BC,OAAG,aAAH,EAAkB,MAAM;AACtB,YAAME,SAAS,oBAAf;AACA,YAAMM,MAAMN,OAAOO,SAAP,CAAiB,EAAEC,MAAM,gBAAR,EAAjB,CAAZ;;AAEA,uBAAOL,KAAP,CAAa,kBAAb,EAAiCG,GAAjC;AACD,KALD;;AAOAR,OAAG,SAAH,EAAc,MAAM;AAClB,YAAME,SAAS,oBAAf;AACA,YAAMM,MAAMN,OAAOO,SAAP,CAAiB,EAAEE,OAAO,SAAT,EAAjB,CAAZ;;AAEA,uBAAON,KAAP,CAAa,SAAb,EAAwBG,GAAxB;AACD,KALD;AAMD,GAdD;AAeD,CA/CD","file":"writer.test.js","sourcesContent":["import { JS, XML, Writer } from '../writer';\nimport assert from 'assert';\n\ndescribe('Writer', () => {\n  describe('#_splitXML', () => {\n    it('basic case', () => {\n      const example = `\n      const element = (<div>Elem</div>);`;\n      const writer = new Writer();\n      const parts = writer._splitXML(example);\n\n      assert.equal(3, parts.length);\n      assert.equal(JS, parts[0].type);\n      assert.equal(XML, parts[1].type);\n    });\n\n    it('a little bit more', () => {\n      const example = `\n      function Clock(props) {\n        return (\n          <div id=\"app\" onClick={handler}>\n            <h1>Hello, world!</h1>\n            <h2>It is {message}.</h2>\n          </div>\n          );\n      }\n      \n      const element = (<Clock />);`;\n      const writer = new Writer();\n      const parts = writer._splitXML(example);\n\n      assert.equal(5, parts.length);\n    });\n  });\n\n  describe('#_emitText', () => {\n    it('static text', () => {\n      const writer = new Writer();  \n      const res = writer._emitText({ text: \"This is static\" });\n    \n      assert.equal('\"This is static\"', res);\n    });\n\n    it('dynamic', () => {\n      const writer = new Writer();\n      const res = writer._emitText({ dText: \"dynamic\" });\n\n      assert.equal('dynamic', res);\n    });\n  });\n})"]}